---
- name: Create install directory tree
  file:
    # item is the loop value
    path: "{{ install_dir }}/{{ item }}"
    state: directory
    owner: "{{ service_user }}"
    group: "{{ service_user }}"
    mode: 0775
    # when recurse is enabled, config file mode will be set to 0775
    # which is a security risk
    recurse: false
  loop:
    - 'config'
    - 'launcher'
    - 'log'
    - 'log_agent'
    - 'manager'
    - 'manager/current'
    - 'manager/previous'
    - 'manager/previous/current'

- name: Install agent launcher
  get_url:
    url: "https://storage.googleapis.com/observiq-cloud/observiq-agent/{{ version }}/artifacts/bpagent-launcher-linux-amd64"
    dest: "{{ install_dir }}/launcher/bpagent-launcher-linux-amd64"
    owner: "{{ service_user }}"
    group: "{{ service_user }}"
    mode: 0755
  notify: "restart {{ agent_type }} agent"
  register: launcher

- name: Install agent manager
  get_url:
    url: "https://storage.googleapis.com/observiq-cloud/observiq-agent/{{ version }}/artifacts/bpagent-manager-linux-amd64"
    dest: "{{ install_dir }}/manager/current/bpagent-manager-linux-amd64"
    owner: "{{ service_user }}"
    group: "{{ service_user }}"
    mode: 0755
  notify: "restart {{ agent_type }} agent"

- name: Register plugins directory
  stat:
    path: "{{ install_dir }}/log_agent/plugins"
  register: plugin_dir

- name: Install plugins
  ansible.builtin.unarchive:
    # creates {{ install_dir }}/log_agent/plugins
    src: "https://storage.googleapis.com/observiq-cloud/observiq-agent/{{ version }}/artifacts/stanza-plugins.tar.gz"
    dest: "{{ install_dir }}/log_agent"
    remote_src: yes
  notify: "restart {{ agent_type }} agent"
  when: launcher.changed or not plugin_dir.stat.exists

- name: Register remote.yaml
  stat:
    path: "{{ install_dir }}/config/remote.yaml"
  register: remote_config_yaml

- name: Read remote.yaml values
  include_vars:
    file: "{{ install_dir }}/config/remote.yaml"
    name: remote_config
  when: remote_config_yaml.stat.exists

- name: Create config/remote.yaml
  template:
    src: "remote.yaml"
    dest: "{{ install_dir }}/config/remote.yaml"
    mode: 0600
  notify: "restart {{ agent_type }} agent"
  # agent will re-write this file with missing fields such as agent_id
  # and template_id, ansible only needs to bootstrap the file with secret_key
  # and websocket endpoint
  when:
    # always create if missing
    - not remote_config_yaml.stat.exists || remote_config is undefined
    # required or has default, always exists
    - remote_config is defined and secret_key != remote_config.secret_key
    - remote_config is defined and websocket_connection_endpoint != remote_config.websocket_connection_endpoint
    # only enforce if set on the ansible side
    - remote_config is defined and template_id != "" and template_id != remote_config.template_id
    - remote_config is defined and agent_id != "" and agent_id != remote_config.agent_id


# Set remote.yaml perms because the template resource
# will skip creation if the file is modified due to force: no.
# We want to ensure 0600 due to remote.yaml containing sensitive
# information such as secret_key.
- name: Set config/remote.yaml mode
  file:
    path: "{{ install_dir }}/config/remote.yaml"
    owner: "{{ service_user }}"
    group: "{{ service_user }}"
    mode: 0600
    state: file

- name: Create config/logging.yaml
  template:
    src: "logging.yaml"
    dest: "{{ install_dir }}/config/logging.yaml"
    mode: 0600
  notify: "restart {{ agent_type }} agent"

- name: Create config/os.yaml
  template:
    src: "os.yaml"
    dest: "{{ install_dir }}/config/os.yaml"
    mode: 0600
  notify: "restart {{ agent_type }} agent"

- name: Create service file
  template:
    src: "observiq-agent.service"
    dest: "/etc/systemd/system/{{ service_name }}.service"
    mode: 0644
  notify:
    - reload systemctl

- name: Start observiq-agent
  service: name={{ service_name }}.service state=started enabled=yes

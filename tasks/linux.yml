---
- name: Create temp plugins directory
  tempfile:
    path: /tmp
    state: directory
    suffix: _observiq_plugins
  register: temp_plugins

- name: Create install directory tree
  file:
    # item is the loop value
    path: "{{ install_dir }}/{{ item }}"
    state: directory
    owner: "{{ service_user }}"
    group: "{{ service_user }}"
    mode: 0755
    recurse: true
  loop:
    - 'config'
    - 'launcher'
    - 'log'
    - 'log_agent'
    - 'manager/current'
    - 'previous/current'

- name: Install agent launcher
  get_url:
    url: "https://storage.googleapis.com/observiq-cloud/observiq-agent/{{ version }}/artifacts/bpagent-launcher-linux-amd64"
    dest: "{{ install_dir }}/launcher/bpagent-launcher-linux-amd64"
    owner: "{{ service_user }}"
    group: "{{ service_user }}"
    mode: 0755
  notify: "restart {{ agent_type }} agent"

- name: Install agent manager
  get_url:
    url: "https://storage.googleapis.com/observiq-cloud/observiq-agent/{{ version }}/artifacts/bpagent-manager-linux-amd64"
    dest: "{{ install_dir }}/launcher/bpagent-manager-linux-amd64"
    owner: "{{ service_user }}"
    group: "{{ service_user }}"
    mode: 0755
  notify: "restart {{ agent_type }} agent"

- name: Install plugins
  ansible.builtin.unarchive:
    # creates {{ install_dir }}/log_agent/plugins
    src: "https://storage.googleapis.com/observiq-cloud/observiq-agent/{{ version }}/artifacts/stanza-plugins.tar.gz"
    dest: "{{ install_dir }}/log_agent"
    remote_src: yes
  notify: "restart {{ agent_type }} agent"

- name: Create service file
  template: src=observiq-agent.service dest=/etc/systemd/system/{{ service_name }}.service mode=644
  notify:
    - reload systemctl

- name: Start observiq-agent
  service: name={{ service_name }}.service state=started enabled=yes

- name: Remove temp directory
  file:
    path: "{{ temp_plugins.path }}"
    state: absent